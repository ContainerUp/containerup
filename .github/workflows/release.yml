name: Build for release

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write

jobs:
  metadata:
    runs-on: ubuntu-latest
    outputs:
      BUILD_NUM: ${{ steps.build_num.outputs.BUILD_NUM }}
      PRERELEASE: ${{ steps.release_type.outputs.PRERELEASE }}
    steps:
      - name: Generate BUILD number
        id: build_num
        run: |
          BUILD_NUM=$(date -u +%Y%m%d%H%M%S)
          echo "BUILD_NUM=$BUILD_NUM"
          echo "BUILD_NUM=$BUILD_NUM" >> "$GITHUB_OUTPUT"
      - name: Check release type
        id: release_type
        run: |
          PRERELEASE=false
          echo "${GITHUB_REF_NAME}" | grep -q - && PRERELEASE=true
          echo "PRERELEASE=${PRERELEASE}"
          echo "PRERELEASE=${PRERELEASE}" >> "$GITHUB_OUTPUT"

  build-frontend:
    uses: ContainerUp/containerup-web/.github/workflows/release.yml@main
    needs: metadata
    with:
      git_ref: ${{ github.ref_name }}
      build_num: ${{ needs.metadata.outputs.BUILD_NUM }}

  build-backend:
    runs-on: ubuntu-latest
    needs: [metadata, build-frontend]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Check if version matches
        run: |
          VERSION=$(cat VERSION)
          if [[ -z "$VERSION" ]]; then
              echo "empty VERSION"
              exit 1
          fi
          if [[ "$GIT_TAG" != "$VERSION"* ]]; then
              echo "VERSION=${VERSION} but GIT_TAG=${GIT_TAG}"
              exit 1
          fi
          echo -n "GIT_TAG" > VERSION
        env:
          GIT_TAG: ${{ github.ref_name }}
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '^1.19.0'
      - name: Copy static files
        uses: actions/download-artifact@v3
        with:
          name: web-build
          path: web/
      - name: Metadata
        run: |
          echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> ${GITHUB_ENV}
          echo "BUILD_NUM=${BUILD_NUM}" >> ${GITHUB_ENV}
          echo "FE_COMMIT_HASH=${FE_COMMIT_HASH}" >> ${GITHUB_ENV}
        env:
          BUILD_NUM: ${{ needs.metadata.outputs.BUILD_NUM }}
          FE_COMMIT_HASH: ${{ needs.build-frontend.outputs.COMMIT }}
      - name: Build project for linux-amd64
        run: ./build.sh
        env:
          GOARCH: amd64
          GOOS: linux
      - name: Build project for linux-arm64
        run: ./build.sh
        env:
          GOARCH: arm64
          GOOS: linux
      - name : Release
        uses: softprops/action-gh-release@v1
        with:
          fail_on_unmatched_files: true
          draft: true
          prerelease: ${{ needs.metadata.outputs.PRERELEASE }}
          files: |
            containerup_linux_amd64
            containerup_linux_arm64
