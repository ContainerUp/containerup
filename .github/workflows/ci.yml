name: CI

on:
  push:
    branches: ["main"]
    paths-ignore:
      - '.github/**'
  pull_request:
    paths-ignore:
      - '.github/**'

jobs:
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '^1.19.0'
      - name: Build project
        run: |
          TAGS="remote exclude_graphdriver_btrfs btrfs_noversion exclude_graphdriver_devicemapper containers_image_openpgp"
          mkdir -p web/build
          touch web/build/empty
          go build -tags "$TAGS" -o containerup_linux_amd64
      - name: Test upgrading
        run: |
          podman build -t containerup:latest .
          PWD_HASH='$2a$10$tRhTPH7xGTJnNUUWgH/96.klhqU2z7zEPTwqa0/KfzJa4RHrVQF0O'
          # start the old container
          ctnup_old=$(podman run -d --name containerup -e "CONTAINERUP_PASSWORD_HASH=${PWD_HASH}" -v $XDG_RUNTIME_DIR/podman/podman.sock:/run/podman/podman.sock containerup:latest)
          # upgrade
          podman run --name containerup-updater -e CONTAINERUP_UPDATE_IMAGE=containerup:latest -e CONTAINERUP_UPDATE_CURRENT_ID=${ctnup_old} -e CONTAINER_UPDATE_RUN=1 containerup:latest

  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: web/package-lock.json
      - name: Install npm dependencies
        run: |
          cd web
          npm install
      - name: Build project
        run: |
          export REACT_APP_CONTAINERUP_VERSION=${GITHUB_REF_NAME}
          export REACT_APP_CONTAINERUP_BUILD=$(date -u +%Y%m%d%H%M%S)
          export REACT_APP_CONTAINERUP_COMMIT=${GITHUB_SHA::7}
          echo BUILD=${REACT_APP_CONTAINERUP_BUILD}
          echo COMMIT=${REACT_APP_CONTAINERUP_COMMIT}
          cd web
          npm run build